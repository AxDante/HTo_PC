function GA = checkGridAvalibility(rowidx,colidx, gs, Gobs)

    Rgp = [0 -1; 0 1; 0 2;                         % Relative grid positions between modules
                  0 -1; 1 0; 1 -1;
                 -1 0; 0 1; 1 1;
                  -1 0; 0 1; 0 2;
                  1 0; 0 1; -1 1;
                  1 -1; 1 0; 2 0;
                  1 -1; 1 0; 2 -1];         
     
     RRgp = [];
     GA = zeros(1,8);
     
     
     for shape = 1:8          
         RRgp(shape,:) = rotationMatrix(Rgp, shape);       % Rotated Relative grid positions

         Rg = [ RRgp(shape,1,:);                                % Robot Grid values
                     0 0;
                     RRgp(shape,2,:);
                     RRgp(shape,3,:)] +[rowidx, colidx];
        
        isvalid = true;
        for idx = 1:size(Rg,1)   
            if (Rg(idx,1) > gs(1) || Rg(idx,1) <= 0 || ...
                    Rg(idx,2) > gs(2) || Rg(idx,2) <= 0)
                isvalid = false;
            else
                if Gobs(Rg(idx,1), Rg(idx,2)) == 1
                    isvalid = false;
                end
                    end
            
            
            
            if Gobs(Rg(idx,1), Rg(idx,2)) == 1
                isvalid = false;
            end
        end
        if (isvalid)
            GA(shape) = 1;
        end
     end         
     
     
     
     
     
     
             
             

      rms = robot_motion_sequence(shape);  % Robot Motion Sequece Array

      
     
      switch command
            case 'F'
                Rg_cmd = Rg + rms(1,:);
            case 'R'
                Rg_cmd = Rg + rms(2,:);
            case 'B'
                Rg_cmd = Rg + rms(3,:);
            case 'L'
                Rg_cmd = Rg + rms(4,:);
            case '8'
                %if shape == 2
                   %shape 
        end

        % Check if the next command is valid
        isvalid = true;
        if (shape ~= 0)
            for idx = 1:size(Rg_cmd,1)
                if (side_as_wall)
                    if (Rg_cmd(idx,1) > gs(1) || Rg_cmd(idx,1) <= 0 || ...
                        Rg_cmd(idx,2) > gs(2) || Rg_cmd(idx,2) <= 0)
                        isvalid = false;
                    else
                        if Gobs(Rg_cmd(idx,1), Rg_cmd(idx,2)) == 1
                            isvalid = false;
                        end
                    end
                end
            end
        elseif (shape == 0)
           if (side_as_wall)
               if (Rg_cmd(2,1) > gs(1) || Rg_cmd(2,1) <= 0 || ...
                       Rg_cmd(2,2) > gs(2) || Rg_cmd(2,2) <= 0)
                   isvalid = false;
               else
                   if Gobs(Rg_cmd(2,1), Rg_cmd(2,2)) == 1
                       isvalid = false;
                   end
               end
           end
        end
        % TODO: Update motion cost
        if (isvalid)
            cost = cost+1;
        end



end